<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    
    <http:listener-config name="HTTPS_Listener_Configuration" protocol="HTTPS" host="0.0.0.0" port="${https.port}" doc:name="HTTP Listener Configuration">
        <tls:context>
            <tls:key-store type="jks" path="keystore.jks" keyPassword="testing123!" password="testing123!"/>
        </tls:context>
    </http:listener-config>
    <http:listener-config name="HTTP_Listener_Configuration" host="0.0.0.0" port="8081" doc:name="HTTP Listener Configuration"/>
    <http:request-config name="Call_Send_API_Request_Configuration" protocol="HTTPS" host="graph.facebook.com" port="443" doc:name="HTTP Request Configuration" basePath="/">
        <tls:context>
            <tls:key-store type="jks" path="keystore.jks" keyPassword="testing123!" password="testing123!"/>
        </tls:context>
    </http:request-config>
    
	<flow name="webhook-flow">
        <http:listener config-ref="HTTPS_Listener_Configuration" path="/webhook" doc:name="HTTP"/>
        <choice doc:name="GET or POST">
            <when expression="#[message.inboundProperties.'http.method' == 'POST']">
                <dw:transform-message doc:name="Transform Message">
                    <dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
                </dw:transform-message>
                <choice doc:name="MESSAGE or POSTBACK">
                    <when expression="#[!(payload.entry[0].messaging[0].message == null)]">
                        <choice doc:name="Message Text">
                        	<when expression="#[payload.entry[0].messaging[0].message.text == null]">
                        		<flow-ref name="echo-response" doc:name="echo-response"/>
                        	</when>
                            <when expression="#[payload.entry[0].messaging[0].message.text.contains(&quot;template&quot;)]">
                                <flow-ref name="template-response" doc:name="template-response"/>
                            </when>
                            <when expression="#[payload.entry[0].messaging[0].message.text.contains(&quot;button&quot;)]">
                                <flow-ref name="button-response" doc:name="button-response"/>
                            </when>
                            <otherwise>
                                <flow-ref name="echo-response" doc:name="echo-response"/>
                            </otherwise>
                        </choice>
                        <logger message="#[payload:java.lang.String]" level="INFO" doc:name="Logger"/>
                        <http:request config-ref="Call_Send_API_Request_Configuration" path="v2.6/me/messages" method="POST" doc:name="Call Facebook Send API">
                            <http:request-builder>
                                <http:query-param paramName="access_token" value="${access_token}"/>
                            </http:request-builder>
                        </http:request>
                        <logger message="#[payload:java.lang.String]" level="INFO" doc:name="Logger"/>
                    </when>
                    <otherwise>
                        <logger message="POSTBACK - #[payload]" level="INFO" doc:name="Logger"/>
                    </otherwise>
                </choice>
            </when>
            <otherwise>
                <set-payload value="#[message.inboundProperties.'http.query.params'.['hub.challenge']]" doc:name="GET - Respond with challenge"/>
            </otherwise>
        </choice>
        
    </flow>
    <flow name="echo-response">
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message metadata:id="6919ff9e-25d3-4988-8d16-4921f6ef7e27" doc:name="Transform Message">
            <dw:input-payload mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: payload.entry.messaging[0].sender.id[0]
	},
	message: {
		text: payload.entry.messaging[0].message.text[0] when payload.entry.messaging[0].message.text[0] !=null otherwise 'No Message'
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="template-response">
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message metadata:id="9625f6b7-dd64-4a3b-8f80-2801af19c170" doc:name="Transform Message">
            <dw:input-payload doc:sample="messageData.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: payload.entry.messaging[0].sender.id[0]
	},
	message: attachment: {
		type: "template",
		payload: {
			template_type: "generic",
			elements: [{
				title: "rift",
				subtitle: "Next-generation virtual reality",
				item_url: "https://www.oculus.com/en-us/rift/",
				image_url: "http://messengerdemo.parseapp.com/img/rift.png",
				buttons: [{
					type: "web_url",
					url: "https://www.oculus.com/en-us/rift/",
					title: "Open Web URL"
				},{
					type: "postback",
					title: "Call Postback",
					payload: "Payload for first bubble"
				}]
			},{
				title: "touch",
				subtitle: "Your Hands, Now in VR",
				item_url: "https://www.oculus.com/en-us/touch/",
				image_url: "http://messengerdemo.parseapp.com/img/touch.png",
				buttons: [{
					type: "web_url",
					url: "https://www.oculus.com/en-us/touch/",
					title: "Open Web URL"
				},{
					type: "postback",
					title: "Call Postback",
					payload: "Payload for second bubble"
				}]
			}]
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="button-response">
        <json:object-to-json-transformer doc:name="Object to JSON"/>
        <dw:transform-message metadata:id="6218cd10-be13-40d9-9e52-6fc15856fde5" doc:name="Transform Message">
            <dw:input-payload doc:sample="text.json" mimeType="application/json"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	recipient: {
		id: payload.entry.messaging[0].sender.id[0]
	},
	message: {
      attachment: {
        type: "template",
        payload: {
          template_type: "button",
          text: "This is test text",
          buttons:[{
            type: "web_url",
            url: "https://www.oculus.com/en-us/rift/",
            title: "Open Web URL"
          }, {
            type: "postback",
            title: "Trigger Postback",
            payload: "DEVELOPER_DEFINED_PAYLOAD"
          }, {
            type: "phone_number",
            title: "Call Phone Number",
            payload: "+16505551234"
          }]
        }
      }
    }
}]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    
    <flow name="facebook-bot-site">
        <http:listener config-ref="HTTPS_Listener_Configuration" path="/" doc:name="HTTP"/>
        <logger message="#[payload]" level="INFO" doc:name="Logger"/>
        <set-payload value="Hello Facebook Bot!" doc:name="Set Payload"/>
    </flow>
</mule>
